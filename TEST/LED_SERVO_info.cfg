#####################################################################
# HW config for active LED extruder
     
# [output_pin led_extruder]   
# [output_pin led_extruder1]   
# [output_pin led_extruder2]   
# [output_pin led_extruder3]   

#####################################################################

[gcode_macro DISPLAY_VARIABLE]
gcode:

variable_led_servo  :  { }

# e.g. led_servo = 'tool_1': ['extruder', 'extruder1']
#                  'tool_2': ['extruder2', 'extruder3'] 
        
 
##################################################################### 

[gcode_macro _INIT_LED_SERVO_INFO]
gcode:
   
     {% set user_vars = printer["gcode_macro VARIABLE"] %}  
    
 {% if user_vars.switching_hotend.enable %} 
  
    {% set var_name = "led_servo" %}    
    {% set init =  { } %}     
    
    ### define extruder for switching servo

   {% for index in user_vars.switching_hotend.name %}      
      {% set _dummy = init.update( {user_vars.switching_hotend.name[index]:[ ] }) %} 
   {% endfor %}

   {% for tool in user_vars.switching_hotend %}  
      {% if 'extruder' in tool %}    
         {% set name =  user_vars.switching_hotend[tool].servo %}
         {% set _dummy = init[name].append( tool )  %}  
      {% endif %}
   {% endfor %}
      
    ### update variables 'led_servo'
         SET_GCODE_VARIABLE MACRO=DISPLAY_VARIABLE   VARIABLE={var_name}  VALUE="{init}"
     
   {% endif %}    

#####################################################################   
[gcode_macro LED_SERVO_INFO]
gcode:
   
     {% set user_vars = printer["gcode_macro VARIABLE"] %}
     {% set display_vars = printer["gcode_macro DISPLAY_VARIABLE"] %}

        {% set servo = params.S %}                # 'tool_1','tool_2' 
        {% set angle = params.A|int %}            #  45, 135 
                  
      {% for tool in display_vars.led_servo[servo] %}      
          SET_PIN PIN={'led_'+tool}     VALUE={1 if  angle ==  user_vars.switching_hotend[tool].angle else 0 }          
         # {action_respond_info("PIN=%s VALUE=%s" % ('led_'+tool, 1 if  angle ==  user_vars.switching_hotend[tool].angle else 0 ))}
      {% endfor %}




      