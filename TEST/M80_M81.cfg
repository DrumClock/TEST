#####################################
### Automatic ON/OFF power supply ###
#####################################

# run "make menuconfig" and select "low level options"
# and option to set "GPIO pins to set at micro-controller startup".
# example: (PE11) GPIO pins to set at micro-controller startup. (for define PS_ON pin)

# Define section in printer.cfg
#
# [output_pin PS_ON]
# pin: PE11
# value: 1

#####################################
### define G-code M80 and M81     ###
#####################################

[gcode_macro _INIT_AUTO_POWER_OFF]
gcode:

  ### generate variable if needed
  {% if printer.save_variables.variables.auto_power_off is not defined %}
    {% set default = {'enable' : True} %}
    SAVE_VARIABLE VARIABLE=auto_power_off VALUE="{default}"
    RESPOND MSG="Initialize auto power off variable. The feature is enabled by default"
  {% endif %}

#===================================================

[gcode_macro M80]
description: Turn on the high-voltage power supply.
gcode:
  
  {% if printer['output_pin PS_ON'].value != 1.0 %}   
    RESPOND MSG=" Power supply ON, wait 15 seconds. "   
    SET_PIN PIN=PS_ON VALUE=1    
    _NEOPIXEL_COUNTDOWN S=0 RGB=0,255,0  
    M117 Power supply ON  
 {% else %}
    RESPOND MSG=" The printer is already turned on !"    
 {% endif %}

#===================================================

[gcode_macro M81]
description: Turn off the high-voltage power supply.
gcode:

 {% if printer.save_variables.variables.auto_power_off.enable %}
    POWER_OFF
 {% else %}
    RESPOND MSG="Initialize auto power off is disabled "
 {% endif %}  

#===================================================

[gcode_macro POWER_OFF]
description: Turn off.
gcode:

  {% set ns = namespace(power_off=true) %}

  ### Heaters detect off   
   {% for tool in printer.heaters.available_heaters|sort %}
     {% if printer[tool].target > 0.0 %}    
       {% set ns.power_off = false %}        
     {% endif %}   
   {% endfor %}   


#======= Single Heater fan detect off ============================== 
# config : printer['heater_fan hotends_fans'].speed 

#     {% if printer['heater_fan hotends_fans'].speed > 0.0 %}    
#       {% set ns.power_off = false %}        
#     {% endif %}   


#=======  Multi Heaters fan detect off =============================
# config : printer['heater_fan extruder'].speed 
# config : printer['heater_fan extruder1'].speed 
# config : printer['heater_fan extruder2'].speed 
# config : printer['heater_fan extruder3'].speed 

#
#  {% for tool in printer.heaters.available_heaters|sort %} ; check for all available heaters
#    {% if 'extruder' in tool %}   
#     {% if printer['heater_fan ' + tool].speed  > 0.0 %}    
#       {% set ns.power_off = false %}        
#     {% endif %}  
#   {% endif %} 
#  {% endfor %}   

#===================================================================
 
  {% if ns.power_off %}
   RESPOND MSG=" The printer will turn off in 15 seconds ! "
   _NEOPIXEL_COUNTDOWN S=0 RGB=255,0,0
   M117 Power supply OFF   
   SET_PIN PIN=PS_ON VALUE=0     
  {% else %}
   RESPOND MSG="Printing in progress, printer cannot be switched off ! "
  {% endif %}   
  UPDATE_DELAYED_GCODE ID=clear_display DURATION=5   


