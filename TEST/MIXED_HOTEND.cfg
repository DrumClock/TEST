# This file contains a configuration snippet for mixed_hotend 
#
# See docs/Config_Reference.md for a description of parameters.

#####################################################################
# All variables in this configuration, KLIPPER merges
# into one configuration  file [gcode_macro VARIABLE] .
#
# ATTENTION:
# If the variable name already exists it will be overwritten!
#####################################################################

[gcode_macro VARIABLE]
gcode:

variable_mixed_hotend : { }

# e.g. = {0:'extruder', 1:'empty', 'load': 25 , 'unload': 24,  'speed' : 45}

#############################################################
# Creating a list of variables from the printer configuration
# using [gcode_macro RUN_MACRO_INIT] which will run
# in [delayed_gcode _INIT] after restarting FW Klipper.
#
# This macro finds all defined _INIT_* macros in printer
# configuration and runs them.
#
# The order in which macros are run can be defined 
# using names:  _INIT_A_* ,  _INIT_B_* ,  _INIT_C_*  etc.
#############################################################
 
[gcode_macro _INIT_MIXED_HOTEND]          
gcode:

   {% set user_vars = printer["gcode_macro VARIABLE"] %} 
   {% set recovery = printer.save_variables.variables %}
   
   {% set name = "mixed_hotend" %}    # name variable
   {% set init = { } %}     # default preset   


  {% if name in recovery %}
     ### restore variable from SD card 
     {% set value = recovery[name] %}
       SET_GCODE_VARIABLE  MACRO=VARIABLE   VARIABLE={name}   VALUE="{value}"
        {action_respond_info("Restore variables mixed hotend from SD card.")}

      ### init extruder after restart  
     {% if user_vars.toolhead|length > 1  %}      
        {% set init_toolhead_1 = recovery[name].1 %}
        ACTIVATE_TOOL EXTRUDER={init_toolhead_1} 
     {% endif %}

       {% set init_toolhead_0 = recovery[name].0 %}
        ACTIVATE_TOOL EXTRUDER={init_toolhead_0} 
        APPLY_OFFSETS_TOOL T={init_toolhead_0} 
     


   {% else %}
     {% for  hotend in  user_vars.toolhead  %}
       {% set _dummy = init.update(  {hotend|int:'empty'} ) %}
     {% endfor  %}    

     ### define load/unload params for mixed hotend  
     {% set _dummy = init.update(  {'load': 20 , 'unload': 20,  'speed' : 25} ) %}
       
     ### save variable
      SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={name} VALUE="{init}"
        {action_respond_info("Creating a list of variables for mixed hotend")}     
     
     {% endif %}

    

#####################################################################
# PRINTER MIXED_HOTEND MANAGEMENT
# Function description: 
#####################################################################
#
# 
#
#####################################################################

[gcode_macro MIXED_HOTEND]  
description:  MIXED_HOTEND  EXTRUDER=extruder
gcode:

        {% set user_vars = printer["gcode_macro VARIABLE"] %} 
        {% set name = "mixed_hotend" %}    # name variable
        {% set init = user_vars.mixed_hotend %}     # default preset  

        {% set act_extruder = printer.toolhead.extruder %}   
   
        {% set target_extruder = params.EXTRUDER|default("extruder") %}
        {% set target_carriage = 0 if target_extruder  in user_vars.toolhead[0] else 1 %}  
     
          # {action_respond_info("target : %s  toolhead: %s" % (target_extruder,target_carriage))}     
  
        {% if target_extruder != user_vars.mixed_hotend[target_carriage] %}  

         
        ##  unload filament > user_vars.mixed_hotend[target_carriage]         


          {% set unload_extruder = user_vars.mixed_hotend[target_carriage] %}
             {action_respond_info("unload : %s" %  unload_extruder )}   

        
      ### extruder activation          
          ACTIVATE_TOOL EXTRUDER={unload_extruder}        
         
          {% if printer[unload_extruder].can_extrude | lower == 'true' %} # and  printer['virtual_sdcard'].is_active == true %}
             G92 E0
             G1 E-{user_vars.mixed_hotend.unload}  F{ (user_vars.mixed_hotend.speed * 60)|int }
          {% endif %}   

            G4 P2000

        ##  load filament   > target_extruder
           {action_respond_info("load : %s" %  target_extruder )}   

         ### extruder activation          
           ACTIVATE_TOOL EXTRUDER={target_extruder}  
          
          {% if printer[target_extruder].can_extrude | lower == 'true' %} # and  printer['virtual_sdcard'].is_active == true %}
             G92 E0
             G1 E{user_vars.mixed_hotend.load}  F{(user_vars.mixed_hotend.speed* 60)|int }
          {% endif %}    

        ## update variable after load filament to target_extruder       
         
          {% set _dummy = init.update( {target_carriage|int : target_extruder} ) %}

         ### save variable
           SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={name} VALUE="{init}"
           SAVE_VARIABLE VARIABLE={name} VALUE="{init}"

          G4 P1000

            ACTIVATE_EXTRUDER EXTRUDER={act_extruder} 
          

  {% endif %}   

       # {action_respond_info("mixed_hotend : %s" %  init )}     
        
             


  
            
        
        