
##########################################################
# Define HW configuration in printer.cfg
#
# Chamber heater  define :  [heater_generic chamber]  > gcode_id: 0
# Other heaters   define :  [heater_generic heater_1] > gcode_id: 1         
#                           [heater_generic heater_2] > gcode_id: 2    
#                           [heater_generic heater_3] > gcode_id: 3    
#                            etc.
##########################################################

#####################################################################
#  Variable for this configurations
#  ATTENTION: 
#  KLIPPER merges all [gcode_macro VARIABLE] into one configuration file.
#  If the variable name already exists it will be overwritten!
#####################################################################

[gcode_macro VARIABLE]
gcode:

variable_heater : { }

# e.g. { 60 :'heater_1' }

#############################################################
# Creating a list of variables from the printer configuration
# using [gcode_macro RUN_MACRO_INIT] which will run
# in [delayed_gcode _INIT] after restarting FW Klipper.
#
# This macro finds all defined _INIT_* macros and runs them.
# The start order can be defined by names: _A_INIT_* , _B_INIT_* etc.
#############################################################

[gcode_macro _INIT_HEATER_GENERIC]
gcode:

 {% set user_vars = printer["gcode_macro VARIABLE"] %}   

  ### init defautl variable
  {% set name = "heater" %}    # name variable
  {% set init = { } %}     # default preset   
 
 {% for heater in printer.heaters.available_sensors|sort %} ; check for all available sensors      
  {% if 'heater_generic' in heater %}   
    {% set gcode_id = printer.configfile.config[(heater)].gcode_id %} 
    {% set name = heater.split(' ')[1] %}
       {% set _dummy = init.update( { gcode_id|int : name } ) %}      
   {% endif %}
 {% endfor %} 

  ### save variable
  SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={name} VALUE="{init}"


#####################################################################
# HEATER_GENERIC - MANAGEMENT
# Function description: 
#
#  M141 H0 S30   -  set temp for Chamber - [heater_generic] = gcode_id: 0
#  M191 H1 S30   -  set temp and wait for heater - [heater_generic] = gcode_id: 1
#
#####################################################################

[gcode_macro M141]
description: set temp for Chamber or other heaters
gcode:

   ### params H= gcode_id for [heater_generic ...]
   
    {% set user_vars = printer["gcode_macro VARIABLE"] %} 

 {% if params.H is defined %}   
    {% set target_heater = user_vars.heater[params.H|int] %}
    {% set target_temp = params.S|default(0)|int %}
    
      SET_HEATER_TEMPERATURE HEATER="{target_heater}" TARGET={target_temp} 
 
 {% else %}
     {action_respond_info("Param H must be defined!")}

 {% endif %}


#####################################################################

[gcode_macro M191]
description: set temp for Chamber or other heaters
gcode:

   ### params H= gcode_id for [heater_generic ...]

    {% set user_vars = printer["gcode_macro VARIABLE"] %} 
 {% if params.H is defined %}  
    {% set target_heater = user_vars.heater[params.H|int] %}
    {% set target_temp = params.S|default(0)|int %}

     {% if target_temp !=0 %} 
       SET_HEATER_TEMPERATURE HEATER="{target_heater}" TARGET={target_temp}  
       TEMPERATURE_WAIT SENSOR="{("heater_generic %s" % target_heater)}" MINIMUM={target_temp - 2.0} MAXIMUM={target_temp + 2.0}
     {% endif %}  
 
 {% else %}
     {action_respond_info("Param H must be defined!")}

 {% endif %}
 
    
