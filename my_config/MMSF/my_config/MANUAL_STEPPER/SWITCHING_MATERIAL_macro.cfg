# -------------------------------------------------------------------
# Define HW configuration in printer.cfg
#
#  -- Same name for [manual_stepper] and [servo] -- 
#
#  -- for material 0,1 --
# [manual_stepper switching_0]  
# [servo switching_0]
#
#  -- for material 2,3 --
# [manual_stepper switching_1]  
# [servo switching_1]
#
#  -- for material 4,5 --
# [manual_stepper switching_2]  
# [servo switching_2]
#
#
#  -- same 'end_stop' pin for all [manual_stepper], switch in splitter 4-in-1  
# [duplicate_pin_override]
# pins:                 
#
#                               etc.
# -------------------------------------------------------------------

#####################################################################
#  Variable for this configurations
#  ATTENTION: 
#  KLIPPER merges all [gcode_macro VARIABLE] into one configuration file.
#  If the variable name already exists it will be overwritten!
#####################################################################

[gcode_macro VARIABLE]
gcode:

variable_switching: { }   

# e.g. switching = {'active': 0 'stepper': ['switching_0', 'switching_1'],
#                   0: {'index': 'switching_0', 'angle': 125,  'delay': 300, 'rotation': 1},
#                   1: {'index': 'switching_0', 'angle': 60, 'delay': 300, 'rotation': -1},
#                   2: {'index': 'switching_1', 'angle': 125,  'delay': 300, 'rotation': 1},
#                   3: {'index': 'switching_1', 'angle': 60,  'delay': 300, 'rotation': -1},


#############################################################
# Creating a list of variables from the printer configuration
# using [gcode_macro RUN_MACRO_INIT] which will run
# in [delayed_gcode _INIT] after restarting FW Klipper.
#
# This macro finds all defined _INIT_* macros and runs them.
# The start order can be defined by names: _A_INIT_* , _B_INIT_* etc.
#############################################################
  
[gcode_macro _INIT_SWITCHING_MATERIAL]
gcode:
   
     {% set user_vars = printer["gcode_macro VARIABLE"] %}
     {% set recovery = printer.save_variables.variables %}
     
     {% set name = "switching" %}    # name variable   
     {% set init = user_vars[name] %}     # default preset 
     {% set ns = namespace(nr_filament=0|int) %}   

     {% set _dummy = init.update( {'active': user_vars.active.material } )   %}

      {% for object in printer.configfile.config|sort %}
        {% if object.split(' ')[0] == 'manual_stepper' %}  
           {% set index = object.split(' ')[1] %} 
           {% set _dummy = init.update({ 'stepper': [index] })  if init.stepper is not defined  else  init.stepper.append(index) %}
            
           ### Defines only two filaments for each servo / stepper
           {% for count in range(0, 2) %}
               {% set angle = 125 if loop.index0 == 0 else 60 %}     
               {% set rotation = 1 if loop.index0 == 0 else -1 %}                          
               {% set _dummy = init.update({ ns.nr_filament: {'index': index ,'angle': angle|int, 'delay': 300, 'rotation': rotation|int} })  %}                                     
               {% set ns.nr_filament =  ns.nr_filament + 1 %}
           {% endfor %} 
    
         {% endif %}
       {% endfor %}  
                                          
           SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={name} VALUE="{init}"
           #{action_respond_info("%s = %s" % (name,init))}      
           {action_respond_info("Creating a list of multi_material variables ") if printer.save_variables.variables.dump_list}

           
        ### update variable_active = 'count'
        {% set name1 = "active" %} 
        {% set init1 = user_vars[name1] %}          
          {% set _dummy =init1.update( {'count':  ns.nr_filament|int } )   %}   
          SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={name1}  VALUE="{init1}"   

                   
        ### disable [manual_stepper] and center [servo]  after restart printer
         {% if 'gcode_macro DISABLE_SWITCHING_MATERIAL' in printer %}  DISABLE_SWITCHING_MATERIAL  {% endif %}   
  
#####################################################################
# SWITCHING MATERIAL MANAGEMENT
# Function description: 
#####################################################################

[gcode_macro SWITCHING_MATERIAL]
description: SWITCHING_MATERIAL  T=0
gcode:
     
     ### params.T = [0|1|2|3]  
            
      {% set user_vars = printer["gcode_macro VARIABLE"] %}     
      {% set name = "switching" %}    # name variable   
      {% set init = user_vars[name] %}     # default preset      
      
      {% set target_material = params.T|default(0)|int %}   
                  
      {% set index = init[target_material].index %}      
      {% set servo_angle = init[target_material].angle %}
      {% set servo_delay = init[target_material].delay %}      

      {% set msg = ("Change Filament" ) %}   
      {% if printer.configfile.config['display'] %}   M117 {msg}   {% endif %}  
      RESPOND MSG='{msg}' 

      ### Disable other SWITCHING manual_stepper and center servo        
        {% for dis_index in init.stepper %}
          {% if dis_index != index %}
              MANUAL_STEPPER STEPPER={dis_index}  ENABLE=0 ; disable power TMC driver              
              SET_SERVO SERVO={dis_index} angle={printer.configfile.config['servo '+dis_index].initial_angle}   ; e.g. 90 deg. - center position 
              G4 P500              
          {% endif %}
        {% endfor %}      
             
      ### set SWITCHING servo
              SET_SERVO SERVO={index} angle={servo_angle}
              G4 P{servo_delay}       

      ### set SWITCHING manual_stepper 
              MANUAL_STEPPER STEPPER={index}  ENABLE=1    ; enable power TMC driver
                       
      ### update and (save) variable for active matarial
        {% set _dummy = init.update({ 'active': target_material })  %}
           SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={name} VALUE="{init}"
           #SAVE_VARIABLE VARIABLE={name} VALUE="{init}"          

        ### update and save variable_active = 'material'
        {% set name1 = "active" %} 
        {% set init1 = user_vars[name1] %}          
        {% set _dummy =init1.update( {'material':  target_material } )   %}   
          SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={name1}  VALUE="{init1}" 
          SAVE_VARIABLE VARIABLE={name1} VALUE="{init1}"       
       
#------------------------- M280 -----------------------------------

        ### update info "angle" variable.servo  for M280
         {% if 'gcode_macro M280' is defined %} 
            {% set var_servo = user_vars.servo %}
              {% for name in var_servo.index|sort %}
                {% if index == var_servo.index[name] %}        
                  {% set _dummy = var_servo.angle.update( { name|int : servo_angle } ) %} 
                  SET_GCODE_VARIABLE MACRO=VARIABLE  VARIABLE=servo VALUE="{var_servo}"
                {% endif %} 
              {% endfor %} 
         {% endif %}        
              
        ### LED indication of angle
         {% if 'gcode_macro LED_SERVO' is defined %} LED_SERVO {% endif %}
         
 #-----------------------------------------------------------------        
        

#####################################################################
 
[gcode_macro DISABLE_SWITCHING_SERVO]
gcode:             
       
       {% set user_vars = printer["gcode_macro VARIABLE"] %}  
       {% set name = "switching" %}    # name variable   
       {% set init = user_vars[name] %}     # default preset 
       
       ### Disable All switching servos         
       {% for index in init.stepper %}   
         M400 ; Wait for current moves to finish
         SET_SERVO SERVO={index}   WIDTH=0    
          {action_respond_info("Switching servo %s turn off" % index )}        
       {% endfor %}
                 
#####################################################################
  
[gcode_macro DISABLE_SWITCHING_MATERIAL]
gcode:             
            
        {% set user_vars = printer["gcode_macro VARIABLE"] %}          
        {% set name = "switching" %}    # name variable   
        {% set init = user_vars[name] %}     # default preset    

        ### Disable all synchronization [manual_stepper] and center [servo]        
        {% for index in init.stepper %}
            MANUAL_STEPPER STEPPER={index} ENABLE=0   ; disable power TMC driver 
            SET_SERVO SERVO={index} angle={printer.configfile.config['servo '+index].initial_angle}   ; e.g. 90 deg. - center position   
            G4 P500              
        {% endfor %}  

        {% if 'gcode_macro DISABLE_SWITCHING_SERVO' is defined %}  DISABLE_SWITCHING_SERVO {% endif %} 
        
#####################################################################

[gcode_macro RESTORE_SWITCHING_MATERIAL]
gcode:      

      {% set user_vars = printer["gcode_macro VARIABLE"] %}
      {% set name = "active" %}    # name variable   
      {% set init = user_vars[name] %}     # default preset  
        
      {% if user_vars.active.material != None %}
          ### restore sync stepper_extruder         
             SWITCHING_MATERIAL   T={init.material}  
      {% endif %}    
 
        