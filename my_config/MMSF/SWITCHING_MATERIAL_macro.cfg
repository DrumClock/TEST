[gcode_macro SWITCHING_MATERIAL]
description: SWITCHING_MATERIAL    T=0
gcode:
     
     ### params.T = [0|1|2|3]  
     
     # variable multi_material = 'stepper': ['switching_0', 'switching_1']
     #                         0: {'index': 'switching_0', 'sync': 'extruder', 'angle': 45, 'rotation': 1},
     #                         1: {'index': 'switching_0', 'sync': 'extruder', 'angle': 135, 'rotation': -1},
     #                         2: {'index': 'switching_1', 'sync': 'extruder', 'angle': 45, 'rotation': 1},
     #                         3: {'index': 'switching_1', 'sync': 'extruder', 'angle': 135, 'rotation': -1},
        
       {% set user_vars = printer["gcode_macro VARIABLE"] %}     
       {% set name = "multi_material" %}    # name variable   
       {% set init = user_vars[name] %}     # default preset      
      
      {% set target_material = params.T|default(0)|int %}   
                  
      {% set sync_index =  init[target_material].index %}
      {% set sync_extruder =  init[target_material].sync %}
      {% set servo_angle =  init[target_material].angle %}
      {% set rotation  =  init[target_material].rotation %}         
      {% set distance = printer.configfile.settings['extruder_stepper '+sync_index].rotation_distance  %}      
  
         
      ### Disable other synchronization SWITCHING extruder_stepper         
        {% for stepper in init.stepper %}
          {% if sync_index != stepper %}
              SYNC_EXTRUDER_MOTION EXTRUDER={stepper}  MOTION_QUEUE=     
          {% endif %}
        {% endfor %}     
  
  
        ### set SWITCHING extruder_stepper 
             SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER={sync_index} DISTANCE={distance * rotation }      
             SYNC_EXTRUDER_MOTION EXTRUDER={sync_index}  MOTION_QUEUE={sync_extruder}      
             
             
        ### set SWITCHING servo
              SET_SERVO SERVO={sync_index} angle={servo_angle}
              G4 P300 
              
#------------------------- M280 -----------------------------------

        ### update info "angle" variable.servo  for M280
         {% if 'gcode_macro M280' is defined %} 
            {% set var_servo = user_vars.servo %}
              {% for name in var_servo.index|sort %}
                {% if sync_index == var_servo.index[name] %}        
                  {% set _dummy = var_servo.angle.update( { name|int : servo_angle } ) %} 
                  SET_GCODE_VARIABLE MACRO=VARIABLE  VARIABLE=servo VALUE="{var_servo}"
                {% endif %} 
              {% endfor %} 
         {% endif %}        
              
        ### LED indication of angle
         {% if 'gcode_macro LED_SERVO' is defined %} LED_SERVO {% endif %}
         
 #-----------------------------------------------------------------        

        ### update variable for active matarial
        {% set _dummy = init.update({ 'active': target_material })  %}
           SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={name} VALUE="{init}"
           SAVE_VARIABLE VARIABLE={name} VALUE="{init}"
          
              

         
         
        
        