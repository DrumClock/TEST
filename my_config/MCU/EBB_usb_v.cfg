# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# ========================================================================
#
# 1) make menuconfig
#          Klipper Firmware Configuration
# [*] Enable extra low-level configuration options
#     Micro-controller Architecture (STMicroelectronics STM32) --->
#     Processor model (STM32G0B1) --->
#     Bootloader offset (No bootloader) --->
#     Clock Reference (8 MHz crystal) --->
#     Communication interface (USB (on PA11/PA12)) --->
#
# 2) <<<DFU mode EBB >>>
#
#  Press and hold the Boot button, then click the RST button to enter DFU mode  
#
# 3) flash
# 
#  make flash FLASH_DEVICE=0483:df11
#
# ========================================================================

# See docs/Config_Reference.md for a description of parameters.

#############################################
#  Extruder Breakout Board for Toolhead 0
#    https://github.com/bigtreetech/EBB
#############################################



[mcu EBB_usb_v]
#serial:/dev/serial/by-id/usb-Klipper_stm32g0b1xx_0E0036001450425539393020-if00
serial:/dev/serial/by-id/usb-Klipper_stm32g0b1xx_100024000F50425539393020-if00

[temperature_sensor EBB_42_V]
sensor_mcu: EBB_usb_v
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100


#[heater_generic heater_1]
#gcode_id: 1
#heater_pin: EBB_usb_v: PB13
#max_power: 0.25
#sensor_type: Generic 3950
#sensor_pin: EBB_usb_v: PA3
#control: pid  # 24v / 40W
#pid_Kp: 4.271 
#pid_Ki: 0.025 
#pid_Kd: 182.178
#min_temp: 0
#max_temp: 100


#[temperature_sensor stepper_v]
#sensor_type: MAX31865
#sensor_pin: EBB_usb_v: PA4
#spi_bus: spi1
#rtd_nominal_r: 100
#rtd_reference_r: 430
#rtd_num_of_wires: 2
#min_temp: 0
#max_temp: 250


[filament_switch_sensor extruder2]
switch_pin: EBB_usb_v: PB3 
pause_on_runout: True
runout_gcode:    
 #    TRIGGER_RUNOUT SENSOR=extruder2


#[filament_motion_sensor extruder2]
#switch_pin: EBB_usb_v: PB3  
#detection_length: 5.0
#extruder: extruder
#pause_on_runout: False
#runout_gcode:
  #   TRIGGER_RUNOUT SENSOR=extruder2


[filament_switch_sensor extruder3]
switch_pin: EBB_usb_v: PB4
pause_on_runout: True
runout_gcode:
 #    TRIGGER_RUNOUT SENSOR=extruder3


#[filament_motion_sensor extruder3]
#switch_pin: EBB_usb_v: PB4
#detection_length: 5.0
#extruder: extruder         # use 'extruder' if 'extruder1' has no defined E-stepper .... [gcode_macro SWITCHING EXTRUDER]
#pause_on_runout: False
#runout_gcode:
  #    TRIGGER_RUNOUT SENSOR=extruder3
  
