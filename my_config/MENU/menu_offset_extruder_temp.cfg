
###############################################################
#         Define LCD menu  "Tool temp OFFSET"  in Temperature
################################################################
# Main
#
# ...
#   + Temperature
#       + Extruder
#         + Ex0:000 (0000)
#         + offset:00 (00)
#         + heater: ON/OFF  (220/0)
#       + Extruder 1
#         + Ex1:000 (0000)
#         + offset:00 (00)
#         + heater: ON/OFF  (220/0)
#       + Extruder 2
#         + Ex0:000 (0000)
#         + offset:00 (00)
#         + heater: ON/OFF  (220/0)
#       + Extruder 3
#         + Ex1:000 (0000)
#         + offset:00 (00)
#         + heater: ON/OFF  (220/0)
##

### disable default menu

[menu __main __temp __hotend0_target]
type: disabled

[menu __main __temp __hotend1_target]
type: disabled

#========================================================

### menu Extruder ###

[menu __main __temp __extruder]
type: list
index:0
enable: {'extruder' in printer}
#enable: {'gcode_macro SET_DUAL_EXTRUDER' in printer}
name: Ex: ~extruder0~ {"(%4.0f)" % (printer.extruder.temperature)}



[menu __main __temp __extruder __target]
type: input
enable: {('extruder' in printer) and ('extruder' in printer.heaters.available_heaters)}
name: {"temp:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input: {printer.extruder.target}
input_min: 0
input_max: {printer.configfile.config.extruder.max_temp}
input_step: 1
gcode:
 #    M104 T0 S{'%.0f' % menu.input}

     {% if menu.input == 0 %}
       SET_TEMP_OFFSET T=0 R=0.0   
     {% endif %}

     {% set offset = printer["gcode_macro VARIABLE"].offset_temp['extruder'] if menu.input !=0 else 0 %}     
     SET_HEATER_TEMPERATURE HEATER=extruder TARGET={menu.input + offset} 
    


[menu __main __temp __extruder __offset]
type: input
enable: {'extruder' in printer}
name: {"offset: %2.0f" % (menu.input)} ~degrees~ 
input: {printer["gcode_macro VARIABLE"].offset_temp['extruder']} 
input_min: -10
input_max: 10
input_step: 1
gcode: 
      {% if printer.extruder.target %}   
      SET_TEMP_OFFSET T=0 R={'%.0f' % menu.input}       
      {% endif %}


[menu __main __temp __extruder __on_off]
type: command
enable: {printer['virtual_sdcard'].is_active != true}
name: heater:{'ON (220)' if printer.extruder.target == 0  else 'OFF'}
gcode:   

     {% set temp = 220  if  printer.extruder.target == 0 else 0 %}   
  
     # M104 T0 S{temp|int}
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp|int} 


#========================================================

[menu __main __temp __extruder1]
type: list
index:1
enable: {'extruder1' in printer}
#enable: {'gcode_macro SET_DUAL_EXTRUDER' in printer}
name: Ex: ~extruder1~ {"(%4.0f)" % (printer.extruder1.temperature)}


[menu __main __temp __extruder1 __target]
type: input
enable: {('extruder1' in printer) and ('extruder1' in printer.heaters.available_heaters)}
name:  {"temp:%3.0f (%4.0f)" % (menu.input, printer.extruder1.temperature)}
input: {printer.extruder1.target}
input_min: 0
input_max: {printer.configfile.config.extruder1.max_temp}
input_step: 1
gcode: 
    # M104 T1 S{'%.0f' % menu.input}

    {% if menu.input == 0 %}
       SET_TEMP_OFFSET T=1 R=0.0   
     {% endif %}

     {% set offset = printer["gcode_macro VARIABLE"].offset_temp['extruder1'] if menu.input !=0 else 0 %}     
     SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET={menu.input + offset} 
    


[menu __main __temp __extruder1 _offset]
type: input
enable: {'extruder1' in printer }
name: {"offset: %2.0f" % (menu.input)} ~degrees~ 
input: {printer["gcode_macro VARIABLE"].offset_temp['extruder1']} 
input_min: -10
input_min: -10
input_max: 10
input_step: 1
gcode:  
      {% if printer.extruder1.target  %} 
        SET_TEMP_OFFSET T=1 R={'%.0f' % menu.input}      
      {% endif %}


[menu __main __temp __extruder1 __on_off]
type: command
enable: {printer['virtual_sdcard'].is_active != true}
name: heater:{'ON (220)' if printer.extruder1.target == 0  else 'OFF'}
gcode:   

     {% set temp = 220  if  printer.extruder1.target == 0 else 0 %}   
  
     # M104 T1 S{temp|int}
     SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET={temp|int} 

#========================================================

[menu __main __temp __extruder2]
type: list
index:2
enable: {'extruder2' in printer}
#enable: {'gcode_macro SET_DUAL_EXTRUDER' in printer}
name: Ex: ~extruder2~ {"(%4.0f)" % (printer.extruder2.temperature)}


[menu __main __temp __extruder2 __target]
type: input
enable: {('extruder2' in printer) and ('extruder2' in printer.heaters.available_heaters)}
name:  {"temp:%3.0f (%4.0f)" % (menu.input, printer.extruder2.temperature)}
input: {printer.extruder2.target}
input_min: 0
input_max: {printer.configfile.config.extruder2.max_temp}
input_step: 1
gcode: 
  # M104 T2 S{'%.0f' % menu.input}
    
    {% if menu.input == 0 %}
       SET_TEMP_OFFSET T=2 R=0.0   
     {% endif %}

     {% set offset = printer["gcode_macro VARIABLE"].offset_temp['extruder2'] if menu.input !=0 else 0 %}     
     SET_HEATER_TEMPERATURE HEATER=extruder2 TARGET={menu.input + offset} 
    


[menu __main __temp __extruder2 _offset]
type: input
enable: {'extruder2' in printer }
name: {"offset: %2.0f" % (menu.input)} ~degrees~ 
input: {printer["gcode_macro VARIABLE"].offset_temp['extruder2']} 
input_min: -10
input_min: -10
input_max: 10
input_step: 1
gcode:  
      {% if printer.extruder2.target  %} 
        SET_TEMP_OFFSET T=2 R={'%.0f' % menu.input}      
      {% endif %}


[menu __main __temp __extruder2 __on_off]
type: command
enable: {printer['virtual_sdcard'].is_active != true}
name: heater:{'ON (220)' if printer.extruder2.target == 0  else 'OFF'}
gcode:   

     {% set temp = 220  if  printer.extruder2.target == 0 else 0 %}   
  
     # M104 T2 S{temp|int}
     SET_HEATER_TEMPERATURE HEATER=extruder2 TARGET={temp|int} 

#========================================================

[menu __main __temp __extruder3]
type: list
index:3
enable: {'extruder3' in printer}
#enable: {'gcode_macro SET_DUAL_EXTRUDER' in printer}
name: Ex: ~extruder3~ {"(%4.0f)" % (printer.extruder3.temperature)}


[menu __main __temp __extruder3 __target]
type: input
enable: {('extruder3' in printer) and ('extruder3' in printer.heaters.available_heaters)}
name:  {"temp:%3.0f (%4.0f)" % (menu.input, printer.extruder3.temperature)}
input: {printer.extruder3.target}
input_min: 0
input_max: {printer.configfile.config.extruder3.max_temp}
input_step: 1
gcode: 
#    M104 T3 S{'%.0f' % menu.input}
    
     {% if menu.input == 0 %}
       SET_TEMP_OFFSET T=3 R=0.0   
     {% endif %}

     {% set offset = printer["gcode_macro VARIABLE"].offset_temp['extruder3'] if menu.input !=0 else 0 %}     
     SET_HEATER_TEMPERATURE HEATER=extruder3 TARGET={menu.input + offset} 
    

[menu __main __temp __extruder3 _offset]
type: input
enable: {'extruder3' in printer }
name: {"offset: %2.0f" % (menu.input)} ~degrees~ 
input: {printer["gcode_macro VARIABLE"].offset_temp['extruder3']} 
input_min: -10
input_min: -10
input_max: 10
input_step: 1
gcode:  
      {% if printer.extruder3.target  %} 
        SET_TEMP_OFFSET T=3 R={'%.0f' % menu.input}      
      {% endif %}


[menu __main __temp __extruder3 __on_off]
type: command
enable: {printer['virtual_sdcard'].is_active != true}
name: heater:{'ON (220)' if printer.extruder3.target == 0  else 'OFF'}
gcode:   

     {% set temp = 220  if  printer.extruder3.target == 0 else 0 %}   
  
     # M104 T3 S{temp|int}
  SET_HEATER_TEMPERATURE HEATER=extruder3 TARGET={temp|int} 

