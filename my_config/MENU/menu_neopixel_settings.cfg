###############################################################
#   Define LCD menu  "Neopixel settings" in "User settings"
################################################################
# Main
# ... 
#  + User settings
#     + Neopixel settings
#        + [Sx]: <config_name>  (Strip index)
#        + Neopixel: ON/OFF
#        + Brightness: 0-100%
#        + RGB settings 
#           + Set RED color
#           + Set GREEN color  
#           + Set BLUE color    
#        + All strip OFF 

#==================================================================
# info :
# printer["gcode_macro VARIABLE"].neopixel = {  'index': {0: 'axis_X',  1: 'ebb_rgb'},
#                                               'RGB':   {0: '0,0,255', 1: '255,0,0'}, 
#                                               'menu':  {'active': 1}
#                                             }
#==================================================================


### menu Neopixel settings ###
[menu __main __user __neopixel]
type: list
enable: { printer["gcode_macro VARIABLE"].neopixel in printer }     
name: Neopixel 

 #------------------------------------------------------------- 

### menu STRIP: <config_name>
[menu __main __user __neopixel __active]
type: input
name:  {"[S%s] : %s" %  (menu.input|int, printer["gcode_macro VARIABLE"].neopixel.index[menu.input|int])}
input: {printer["gcode_macro VARIABLE"].neopixel.menu.active}
input_min: 0
input_max: {printer["gcode_macro VARIABLE"].neopixel.index|length-1} 
input_step: 1
gcode: 
       
    ### update neopixel variable 'menu'
    {% set neopixel = printer["gcode_macro VARIABLE"].neopixel %}
    {% set _dummy = neopixel.menu.update( {'active': menu.input|int} ) %} 
    SET_GCODE_VARIABLE MACRO=VARIABLE  VARIABLE=neopixel VALUE="{neopixel}"
 
 #------------------------------------------------------------- 
  
 ### menu STRIP: ON/OFF
[menu __main __user __neopixel __on_off]   
type: command
name: Neopixel: {'ON' if printer["gcode_macro VARIABLE"].neopixel.RGB[printer["gcode_macro VARIABLE"].neopixel.menu.active] == '0,0,0' else 'OFF'}
gcode:   

  {% if printer["gcode_macro VARIABLE"].neopixel.menu.active != "mks_mini12864" %}
    {% set status =  printer["gcode_macro VARIABLE"].neopixel.RGB[printer["gcode_macro VARIABLE"].neopixel.menu.active] %}
    {% set turn = 'ON' if status == '0,0,0' else 'OFF' %}   
  
     SET_NEOPIXEL STRIP={printer["gcode_macro VARIABLE"].neopixel.menu.active}  LED={turn}
  {% endif %}

 #-------------------------------------------------------------   

### menu Brightness: 0-100%
[menu __main __user __neopixel __brightness]
type: input
name: Bright.: {'%3d' % (menu.input*100)}%
input: {0|int if printer["gcode_macro VARIABLE"].neopixel.RGB[printer["gcode_macro VARIABLE"].neopixel.menu.active] == '0,0,0' else 1|int }
input_min: 0.05
input_max: 1.0
input_step: 0.05
realtime: True
gcode:

#    {% set user_vars = printer["gcode_macro VARIABLE"] %} 
#    {% set color =  user_vars.neopixel.RGB[user_vars.neopixel.menu.active] %}
        
#    {% if color.split(",")|length == 3 %}    
#      {% set R = color.split(",")[0]|int *  menu.input  %}
#      {% set G = color.split(",")[1]|int *  menu.input  %}
#      {% set B = color.split(",")[2]|int *  menu.input  %}       
#      {% set bright = ("%s,%s,%s" % (R|int, G|int, B|int)) %}
#    {% endif %}    

     {% set R = 255 *  menu.input  %}
     {% set G = 255 *  menu.input  %}
     {% set B = 255 *  menu.input  %}   
     {% set bright = ("%s,%s,%s" % (R|int, G|int, B|int)) %}

     SET_NEOPIXEL STRIP={printer["gcode_macro VARIABLE"].neopixel.menu.active}  RGB={bright}    
 
 #-------------------------------------------------------------  

### menu RGB settings  ###
[menu __main __user __neopixel __RGBset]
type: list
name: RGB settings

 #-------------------------------------------------------------  

### menu Set RED color  
[menu __main __user __neopixel __RGBset __red]
type: command
name:  Set RED color
gcode:   

   SET_NEOPIXEL STRIP={printer["gcode_macro VARIABLE"].neopixel.menu.active}  LED=RED

    
 #-------------------------------------------------------------  

### menu Set GREEN color  
[menu __main __user __neopixel __RGBset __green]
type: command
name:  Set GREEN color
gcode:

   SET_NEOPIXEL STRIP={printer["gcode_macro VARIABLE"].neopixel.menu.active}  LED=GREEN

    
 #-------------------------------------------------------------  

### menu Set BLUE color  
[menu __main __user __neopixel __RGBset __blue]
type: command
name:  Set BLUE color
gcode: 

   SET_NEOPIXEL STRIP={printer["gcode_macro VARIABLE"].neopixel.menu.active}  LED=BLUE

   
 #-------------------------------------------------------------  

### menu  All strip OFF 
[menu __main __user __neopixel __all_off]
enable: { 'gcode_macro _ALL_NEOPIXEL_OFF' in  printer }     
type: command
name:  All Neopixel OFF  
gcode:

    
         _ALL_NEOPIXEL_OFF
