#####################################################################
#  Variable for this configurations
#  ATTENTION: 
#  KLIPPER merges all [gcode_macro VARIABLE] into one configuration file.
#  If the variable name already exists it will be overwritten!
#####################################################################

[gcode_macro VARIABLE]
gcode:

variable_multi_material: { }  # e.g. {'stepper': ['switching_0'], 'extruder': ['extruder']}  

#############################################################
# Creating a list of variables from the printer configuration
# using [gcode_macro RUN_MACRO_INIT] which will run
# in [delayed_gcode _INIT] after restarting FW Klipper.
#
# This macro finds all defined _INIT_* macros and runs them.
# The start order can be defined by names: _A_INIT_* , _B_INIT_* etc.
#############################################################
  
[gcode_macro _INIT_MMSE]
gcode:

   {% set user_vars = printer["gcode_macro VARIABLE"] %}
   {% set name = "multi_material" %}    # name variable
   {% set init = user_vars[name] %}     # default preset        

   {% for object in printer.configfile.config|sort %}
   
     {% if object.split(' ')[0] == 'extruder_stepper' %}  
       # {action_respond_info("object = %s" % (object))}        
       
       {% set stepper = object.split(' ')[1] %} 
       {% set extruder = printer.configfile.settings[object].extruder %}  
         
       {% set _dummy = init.update({ 'stepper': [stepper] })  if init.stepper is not defined  else  init.stepper.append(stepper) %}
       {% set _dummy = init.update({ 'extruder': [extruder] })  if init.extruder is not defined  else  init.extruder.append(extruder) %}
        
      {% endif %}
    {% endfor %}  
  
     SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={name} VALUE="{init}"
     # {action_respond_info("%s = %s" % (name,init))}  

      {action_respond_info("Creating a list of extruder_stepper variables ") if printer.save_variables.variables.dump_list}

   

#####################################################################
# Multi Material Switching Extruder (MMSE) MANAGEMENT
# Function description: 
#####################################################################

[gcode_macro material_0]
gcode:

    {% set user_vars = printer["gcode_macro VARIABLE"] %}

### set SWITCHING extruder_stepper     
    {% set sync_stepper =  user_vars.multi_material.stepper[0] %}
    {% set sync_extruder =  user_vars.multi_material.extruder[0]%}
    {% set dafault_rotation = printer.configfile.settings['extruder_stepper '+sync_stepper].rotation_distance  %}
    
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER={sync_stepper} DISTANCE={dafault_rotation}    

### if the extruder stepper is not currently associated with an extruder
    {% if printer['extruder_stepper '+sync_stepper].motion_queue == None %}
      SYNC_EXTRUDER_MOTION EXTRUDER={sync_stepper} MOTION_QUEUE={sync_extruder}
    {% endif %} 

### Disable sync other SWITCHING extruder_stepper 
    {% if user_vars.multi_material.stepper[1] is defined %}
      SYNC_EXTRUDER_MOTION EXTRUDER={user_vars.multi_material.stepper[1]} MOTION_QUEUE=  
    {% endif %}
    
    SET_PIN PIN=led_lower_1  VALUE=1
    SET_PIN PIN=led_upper_1  VALUE=0
    
#####################################################################        

[gcode_macro material_1]
gcode:

    {% set user_vars = printer["gcode_macro VARIABLE"] %}
  
### set  SWITCHING extruder_stepper - REVERS  
    {% set sync_stepper =  user_vars.multi_material.stepper[0] %}
    {% set sync_extruder =  user_vars.multi_material.extruder[0]%}
    {% set dafault_rotation = printer.configfile.settings['extruder_stepper '+sync_stepper].rotation_distance  %}
    
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER={sync_stepper} DISTANCE={dafault_rotation *-1 }    

### if the extruder stepper is not currently associated with an extruder
    {% if printer['extruder_stepper '+sync_stepper].motion_queue == None %}
      SYNC_EXTRUDER_MOTION EXTRUDER={sync_stepper} MOTION_QUEUE={sync_extruder}
    {% endif %} 

### Disable sync other SWITCHING extruder_stepper 
    {% if user_vars.multi_material.stepper[1] is defined %}
      SYNC_EXTRUDER_MOTION EXTRUDER={user_vars.multi_material.stepper[1]} MOTION_QUEUE=  
    {% endif %}
   
    
    SET_PIN PIN=led_lower_1  VALUE=0  
    SET_PIN PIN=led_upper_1  VALUE=1

#####################################################################

[gcode_macro disable_0]
gcode:

  {% set user_vars = printer["gcode_macro VARIABLE"] %}
  
### Disable sync SWITCHING extruder_stepper 
    {% set sync_stepper =  user_vars.multi_material.stepper[0] %}
    SYNC_EXTRUDER_MOTION EXTRUDER={sync_stepper} MOTION_QUEUE=

    SET_PIN PIN=led_lower_1  VALUE=1  
    SET_PIN PIN=led_upper_1  VALUE=1
     
