# This file contains a configuration snippet for SWITCHING EXTRUDER 
#
# A Switching Extruder is a dual extruder that uses a single stepper motor
# to drive two filaments, but only one at a time.
#
# The servo is used to switch the side of the extruder that will drive the filament.
# The E motor also reverses direction for the second filament.
#
#
# See docs/Config_Reference.md for a description of parameters.

#####################################################################
#  add HW config printer for switching extruder stepper
#####################################################################
# 
# [extruder]          - full definition
# [extruder1]         - without stepper definition
#

#####################################################################
# All variables in this configuration, KLIPPER merges
# into one configuration  file [gcode_macro VARIABLE] .
#
# ATTENTION:
# If the variable name already exists it will be overwritten!
#####################################################################

[gcode_macro VARIABLE]
gcode:

variable_switching_extruder: { }   # do not edit !  


# example after _INIT_SWITCHING_EXTRUDER :
#
# switching_extruder =  {'enable':true, 'extruder1' : 'extruder' }  
                                                         

#############################################################
# Creating a list of variables from the printer configuration
# using [gcode_macro RUN_MACRO_INIT] which will run
# in [delayed_gcode _INIT] after restarting FW Klipper.
#
# This macro finds all defined _INIT_* macros and runs them.
# The start order can be defined by names: _A_INIT_* , _B_INIT_* etc.
#############################################################

[gcode_macro _F_INIT_SWITCHING_EXTRUDER]          
gcode:

   {% set user_vars = printer["gcode_macro VARIABLE"] %} 

  ### update variable switching_extruder { } by configuration of printer   
  {% set name = "switching_extruder" %}      # name variable
  {% set init = { 'enable': false  } %}     # default preset   
 
  {% set ns = namespace(enable=0|int) %}

   {% for tool in printer.motion_report.steppers |sort %} 
      {% if 'extruder' in tool    %} 
         {% set  tool_name =  tool     %}      
         {% set  carriage = 0 if tool_name in user_vars.toolhead[0] else 1  %}

            {% for extruder in user_vars.toolhead[carriage]|sort %}  
              {% if tool_name !=  extruder  %}
                 {% set sync_ex =  extruder  %}
                 {% set _dummy = init.update( { sync_ex : tool_name  } )     %}   
                 {% set ns.enable = 1 %}  
              {% endif %}
           {% endfor %}
       {% endif %}
   {% endfor %}     

   {% if ns.enable == 1 %}
     {% set _dummy = init.update( { 'enable': true } )  %}  
   {% endif %}

     ### update variables
    SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={name} VALUE="{init}"
    {action_respond_info("Creating a list of variables switching_extruder" ) if printer.save_variables.variables.dump_list}  

#####################################################################
# PRINTER SWITCHING EXTRUDER MANAGEMENT
# Function description: One stepper motor to move two filaments.
#####################################################################

[gcode_macro SWITCHING_EXTRUDER]
description: Set : SWITCHING_EXTRUDER  E=(name)
gcode:
       # {action_respond_info(">>>> run gcode_macro  SWITCHING_EXTRUDER E= %s " % (tool_name))}  
 {% set user_vars = printer["gcode_macro VARIABLE"] %}

# {% if user_vars.switching_extruder.enable %}
        ### params.E = ['extruder'| 'extruder1'| 'extruder2'| 'extruder3']
        
         {% set tool_name = params.E %}      
         {% set tool_nr = tool_name.lstrip("extruder")|int if tool_name.lstrip("extruder")|length != 0 else 0 %}
       
         {% set default_extruder = tool_name %}
         {% set sync_extruder =  tool_name %}
         {% set rotation = 1 %}
         {% set extrude_factor = 1.0 %}           
         
         ### set swiching extruder 
           {%  if  tool_name  is not in   printer.motion_report.steppers %}             
              {% set sync_extruder =  user_vars.switching_extruder[tool_name] %} 
              {% set rotation = -1 %}                
           {% endif %}

         ### if define macro M221 - set extrude factor for "default_extruder"
           {% if printer['gcode_macro M221'] is defined %}  
             {% set extrude_factor = printer['gcode_macro VARIABLE'].extrude_factor[default_extruder]  %}
           {% endif %}
        
         ### seingst extruder 
         {% set dafault_rotation = printer.configfile.settings[sync_extruder].rotation_distance *  rotation %}
         {% set dafault_pressure = printer.configfile.settings[sync_extruder].pressure_advance %}
         {% set dafault_smoothti = printer.configfile.settings[sync_extruder].pressure_advance_smooth_time  %} 
            
         SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER={sync_extruder} DISTANCE={dafault_rotation / extrude_factor }
         SYNC_EXTRUDER_MOTION EXTRUDER={sync_extruder} MOTION_QUEUE={default_extruder}
         SET_PRESSURE_ADVANCE EXTRUDER={sync_extruder} ADVANCE={dafault_pressure} SMOOTH_TIME={dafault_smoothti}

        {% if 'gcode_macro SET_ENDLESS_SPOOL' in printer and printer['gcode_macro VARIABLE'].filament_sensor.motion is defined %}
           ### seting switching 'filament_motion_sensor'   
            {% for sensor in user_vars.filament_sensor.motion %} 
              SET_FILAMENT_SENSOR SENSOR={sensor} ENABLE={1 if default_extruder == sensor else 0 }     
            {% endfor %}   
         {% endif %}

        ### if the extruder is not activated
         {% if printer.toolhead.extruder != tool_name %}       
            ACTIVATE_EXTRUDER EXTRUDER={tool_name}      
         {% endif %}


#          ### save actual rotation distance for active extruder
#         {% set _dummy = user_vars.act_rotation_distance.update({default_extruder: (dafault_rotation / extrude_factor)|round(3)}) %}
#         SET_GCODE_VARIABLE MACRO=VARIABLE   VARIABLE=act_rotation_distance  VALUE="{user_vars.act_rotation_distance}"   

#   {% else %}
#       RESPOND MSG=" SWITCHING EXTRUDER is disabled !"
#   {% endif %}
