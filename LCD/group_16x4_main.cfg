
###  [include /home/pi/my_config/LCD_settings/user_display_template.cfg] 
###  [include /home/pi/my_config/LCD_settings/user_display_glyph.cfg] 

######################################################################
#  main 16x4 display panel LCD 12864
######################################################################


[display_data _16x4 mcu_temp]
position: 0, 0
text: 
  #       {% set display_index = printer.toolhead.estimated_print_time|int % 10 %}   
  #            {% if display_index < 5 %}
  #                { render("_mcu_temperature", param_temperature_sensor="Rumba_32", param_display_name="Rumba_32 ") }
  #            {% else %}
  #                { render("_mcu_temperature", param_temperature_sensor="raspberry_pi", param_display_name="Raspberry") }
  #            {% endif %}
   
        { render("_temp_sens") }	
   
  

[display_data _16x4 speed_icon]
position: 1, 0
text: 
#          {% set display_index = printer.toolhead.estimated_print_time|int % 4 %}   
#              {% if display_index <2 %}

             {% if printer['virtual_sdcard'].is_active %}
               ~speed~   {"%4.1f" % (printer['motion_report'].live_velocity)} mm/s
               {% else %}
               ~speed~   {"-.- mm/s"} 
            {% endif %}

   
[display_data _16x4 feed_rate]
position: 2, 10
text:      ~feedrate~{"{:>4.0%}".format(printer.gcode_move.speed_factor)}    


 
[display_data _16x4 heater_bed]
position: 2, 0
text: { render("_heater_temperature", param_heater_name="heater_bed") }


#[display_data _16x4 printing_time]
#position: 2, 10
#text: 
#             {% if printer['virtual_sdcard'].is_active %}
#                 { "%6s" % (render("_printing_time").strip(),) }
#             {% else %}              
#            
#             {% endif %}

[display_data _16x4 print_progress_and_status]
position: 3, 0
text:

    {% if printer['virtual_sdcard'].is_active %}
       {% set display_index = printer.toolhead.estimated_print_time|int % 10 %}   
              {% if display_index < 5 %}
                   { "{:^16.0%}".format(printer.display_status.progress) }
                  [display_data _16x4 progress_bar]
                   position: 3, 1 # Draw graphical progress bar after text is written
                  text: { draw_progress_bar(3, 0, 16, printer.display_status.progress) }       
               {% else %}
                    { render("_print_status") }
               {% endif %}
    {% else %}
            {% set pos = printer.toolhead.position %}
            # { "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }
             { render("_print_status") }
     {% endif %}

#---------------------------------------------------

[gcode_macro VARIABLE]
gcode:

variable_temp_sensor  : {'index': ['raspberry_pi', 'Rumba_32', 'EBB_temp'], 'name': ['Raspberry', 'Rumba 32 ', 'EBB-V    ']}

#------------------------------------------------------
[display_template _temp_sens]
text:

    {% set user_vars = printer["gcode_macro VARIABLE"] %}  
     
   ### define index for sensor  
     {% set display_index = printer.toolhead.estimated_print_time|int % user_vars.temp_sensor.index|length %}   
                  
     {% set temperature_sensor = user_vars.temp_sensor.index[display_index] %}      
     {% set display_name = user_vars.temp_sensor.name[display_index] %}              
                
   ### read temp    
      {% set mcu_temp =printer[('temperature_sensor ' + temperature_sensor)].temperature %}
   ### Show temperature    
       ~chip~ {display_name}{"%3.0f" % (mcu_temp,) }~degrees~   
              
 
      
             
