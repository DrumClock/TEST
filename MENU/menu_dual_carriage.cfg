# user_vars.carriage_park
# carriage_park = {'enable':True, 'sync': True, 'movespeed': 500, 'feedrate': 30000, 'endstop':[-52,300 ] }  

###############################################################
#   Define LCD menu  "Dual Carriage" in "User settings"
################################################################
#
# Main
# ... 
#  + User settings
#    + Dual Carriage
#      + Park carriage
#         + Auto : Disable / Enable
#         + Sync : Disable / Enable
#      + IDEX Mode                      (if homing)
#         + =(mode)=                    (only info)
#         + Set Full control mode   S0  
#         + Set Auto-park mode      S1  (default mode)
#         + Set Duplication mode    S2
#         + Set Mirroring mode      S3
#      + Disable Carriage               (only S2, S3 mode)
#         + Left : No / Yes 
#         + Right : No / Yes 
#

#==================================================================

### menu Dual Carriage ###
[menu __main __user __dual_carriage]
type: list
enable: { 'dual_carriage' in printer }     
name: Dual Carriage 

#############################################################

### menu Park carriage mode  ###
[menu __main __user __dual_carriage __parkmode]
type: list
index:0
name: Park carriage 

#---------------------------------------------

###  menu Auto-park mode: Disable / Enable  
[menu __main __user __dual_carriage __parkmode __auto]
type: input
name: Auto: {'Enable' if menu.input else 'Disable'}
input: {1 if printer["gcode_macro VARIABLE"].carriage_park.enable else 0  }
input_min: 0
input_max: 1
input_step: 1
gcode:

      {% set user_vars = printer["gcode_macro VARIABLE"] %} 

     {% set carriage_park = user_vars.carriage_park  %}
     {% set _dummy = carriage_park.update( { 'enable': True if menu.input else False } ) %}    
       SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE=carriage_park VALUE="{carriage_park}"
    
     
#---------------------------------------------    

###  menu Sync-Park  mode: Disable / Enable  
[menu __main __user __dual_carriage __parkmode __sync]
type: input
name: Sync: {'Enable' if menu.input else 'Disable'}
input: {1 if printer["gcode_macro VARIABLE"].carriage_park.sync else 0}
input_min: 0
input_max: 1
input_step: 1
gcode:

      {% set user_vars = printer["gcode_macro VARIABLE"] %} 

     {% set carriage_park = user_vars.carriage_park  %}
     {% set _dummy = carriage_park.update( { 'sync': True if menu.input else False } ) %} 
     SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE=carriage_park VALUE="{carriage_park}"
       
#############################################################   

### menu Set IDEX Mode ###

[menu __main __user __dual_carriage __idex_mode]
type: list
enable: {printer.toolhead.homed_axes == "xyz"}
name: IDEX Mode

[menu __main __user __dual_carriage __idex_mode __mode]
type: command
# name: ={({0:'Full control',1:'Auto-park',2:'Duplication mode',3:'Mirroring mode'})[printer["gcode_macro VARIABLE"].mode_605]}=
name: {({0:'~extruder0~ Full-ctrl ~extruder1~',1:'~extruder0~ Auto-park ~extruder1~',2:'~s_extruder4~ Duplicat. ~s_extruder4~',3:'~s_extruder4~ Mirroring ~m_extruder4~'})[printer["gcode_macro VARIABLE"].idex_mode.active]}
gcode: 

#---------------------------------------------  

[menu __main __user __dual_carriage __idex_mode __s0]
type: command
enable:  {printer['virtual_sdcard'].is_active != true}
name: Set Full control mode
gcode:  
       M605 S0
    
#---------------------------------------------  

[menu __main __user __dual_carriage __idex_mode __s1]
type: command
enable:  {printer['virtual_sdcard'].is_active != true}
name: Set Auto-park mode 
gcode:
       M605 S1      
 
#---------------------------------------------  
 
[menu __main __user __dual_carriage __idex_mode __s2]
type: command
enable:  {printer['virtual_sdcard'].is_active != true}
name: Set Duplication mode
gcode: 
      M605 S2           
 
#---------------------------------------------  

[menu __main __user __dual_carriage __idex_mode __s3]
type: command
enable:  {printer['virtual_sdcard'].is_active != true}
name: Set Mirroring mode
gcode: 
      M605 S3  

#############################################################   

### menu Disable Carriage ###
[menu __main __user __dual_carriage __disable_carriage]
type: list
index:1
enable: { printer["gcode_macro VARIABLE"].tool_change.enable  and  printer["gcode_macro VARIABLE"].idex_mode.active in [2,3] } 
name: Disable Carriage 

#---------------------------------------------  

### menu Disable Left Carriage ###
[menu __main __user __dual_carriage __disable_carriage __left]
type: input
name: Left:  {'Yes' if menu.input else 'No'}
input: 0
input_min: 0
input_max: 1
input_step: 1
gcode:

    {% if menu.input == 1 %}
         DISABLE_CARRIAGE_0
    {% endif %}

#---------------------------------------------  

### menu Disable Right Carriage ###
[menu __main __user __dual_carriage __disable_carriage __right]
type: input
name: Right: {'Yes' if menu.input else 'No'}
input: 0
input_min: 0
input_max: 1
input_step: 1
gcode:

    {% if menu.input == 1 %}
         DISABLE_CARRIAGE_1
    {% endif %}
 


     


