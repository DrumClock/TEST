####################################################################
#  Variable for this configurations
#  ATTENTION: 
#  KLIPPER merges all [gcode_macro VARIABLE] into one configuration file.
#  If the variable name already exists it will be overwritten!
#####################################################################

[gcode_macro DISPLAY_VARIABLE]
description: HELP: for list of variables send GET_DISPLAY_VARIABLE
gcode:

variable_toolhead  :  {   }

# e.g. toolhead =  {'extruder':0, 'extruder1':0, 'extruder2':1, 'extruder3':1 } 

#############################################################
# Creating a list of variables from the printer configuration
# using [gcode_macro RUN_MACRO_INIT] which will run
# in [delayed_gcode _INIT] after restarting FW Klipper.
#
# This macro finds all defined _INIT_* macros and runs them.
# The start order can be defined by names: _A_INIT_* , _B_INIT_* etc.
#############################################################

[gcode_macro _INIT_DISPLAY_TOOLHEAD]
gcode:

   {% set display_vars = printer["gcode_macro DISPLAY_VARIABLE"] %}
   {% set user_vars = printer["gcode_macro VARIABLE"] %}
  
   {% if  user_vars.toolhead is defined %}

     {% set name = "toolhead" %}   
     {% set  init = { } %} 

    {% for tool in printer.heaters.available_heaters|sort %}   
       {% if 'extruder' in tool %}   
	       {% for index in user_vars.toolhead %}  
              {% if tool  in user_vars.toolhead[index] %}
                   {% set _dummy = init.update( { tool : index|int})  %} 
               {% endif %}
           {% endfor %}
        {% endif %}
      {% endfor %}  

     SET_GCODE_VARIABLE MACRO=DISPLAY_VARIABLE VARIABLE={name} VALUE="{init}"
         
  {% endif %}


  
