###############################################################
#         Define LCD menu  "Fans settings"  in User settings
################################################################
#
# >>>>  menu for config [fan_generic] - users define fan functions <<<<
#
# Main
# ...   
#   + User menu
#     + Fans 
#        + [P<index>] : <config_name>
#        + Fan: ON/OFF
#        + Fan speed: 0-100%
#        + All Fans OFF   

# ==================== Fans settings menu ==============================================

### Fans settings
[menu __main __user __fansettings]
type: list
# index: 5
enable:  { printer["gcode_macro VARIABLE"].fan.menu } 
name: Fans 



### Active FAN
[menu __main __user __fansettings __activefan]
type: input
name:  {"[P%s] : %s" %  (menu.input|int, printer["gcode_macro VARIABLE"].fan.index[menu.input|int])}
input: {printer["gcode_macro VARIABLE"].fan.active}
input_min: 0
input_max: {printer["gcode_macro VARIABLE"].fan.index|length-1} 
input_step: 1
gcode: 

    {% set user_vars = printer["gcode_macro VARIABLE"] %} 

    {% set var_fan = user_vars.fan  %}
    {% set _dummy = var_fan.update( { 'active': menu.input|int } ) %}    
      SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE=fan VALUE="{var_fan}"
 
   
### Fan: ON/OFF
[menu __main __user __fansettings __fanonoff]
type: command
name: Fan: {'OFF' if printer[("fan_generic %s" % (printer["gcode_macro VARIABLE"].fan.index[printer["gcode_macro VARIABLE"].fan.active])) ].speed  else 'ON' }
gcode:

   {% set status = 'OFF' if printer[("fan_generic %s" % (printer["gcode_macro VARIABLE"].fan.index[printer["gcode_macro VARIABLE"].fan.active]))].speed  else 'ON' %}
   {% set turn = 255  if status == 'ON'  else 0 %} 

    M106 S{turn|int} P{printer["gcode_macro VARIABLE"].fan.active}


### Fan speed: 0-100%
[menu __main __user __fansettings __fanspeed]
type: input
name: Fan speed: {'%3d' % (menu.input*100)}%
input: {printer[ ("fan_generic %s" % (printer["gcode_macro VARIABLE"].fan.index[printer["gcode_macro VARIABLE"].fan.active])) ].speed}
input_min: 0
input_max: 1
input_step: 0.01
gcode:
    M106 S{'%d' % (menu.input*255)} P{printer["gcode_macro VARIABLE"].fan.active}

### All Fans OFF 
[menu __main __user __fansettings __allfansoff]
type: command
name: All Fans OFF
gcode:

 {% set total =printer["gcode_macro VARIABLE"].fan.index|length  %}
   {% for n in range(total) %} 
      M106 S0 P{n}
   {% endfor %}

